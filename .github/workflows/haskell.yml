name: Haskell CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Cache gen-cached
      id: cache-gen
      uses: actions/cache@v1
      with:
        path: gen-cached
        key: ${{ runner.os }}-${{ hashFiles('**/*.nix') }}-${{ hashFiles('hack-out-of-store.sh') }}-${{ hashFiles('site-gen/*') }}
    - uses: cachix/install-nix-action@v8
      if: steps.cache-gen.outputs.cache-hit != 'true'
    - uses: cachix/cachix-action@v6
      if: steps.cache-gen.outputs.cache-hit != 'true'
      with:
        name: aver1y
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Cache citations
      id: cache-citations
      uses: actions/cache@v1
      with:
        path: citation-cache
        key: citation-cache
    - name: Cache node_modules
      id: cache-node_modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: node_modules
    - name: Build
      if: steps.cache-gen.outputs.cache-hit != 'true'
      run: |
        yarn install --network-concurrency 1
        nix-build static.nix
        ./hack-out-of-store.sh
    - name: Build site
      run: |
        gen-cached/site-gen build
        touch _site/.nojekyll
    - name: Deploy
      if: success() && github.event_name == 'push'
      uses: crazy-max/ghaction-github-pages@v1
      with:
        target_branch: gh-pages
        build_dir: _site
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
